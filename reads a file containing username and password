import hashlib
import requests

def get_sha1_hash(password):
    """Generate the SHA-1 hash of the password."""
    return hashlib.sha1(password.encode('utf-8')).hexdigest().upper()

def check_pwned_password(password):
    """Check if a password has been breached using the Pwned Passwords API."""

    # Step 1: Hash the password using SHA-1
    sha1_password = get_sha1_hash(password)

    # Step 2: Split the hash into the first 5 characters (prefix) and the rest (suffix)
    prefix, suffix = sha1_password[:5], sha1_password[5:]

    # Step 3: Send the first 5 characters (prefix) to the API
    url = f"https://api.pwnedpasswords.com/range/{prefix}"
    response = requests.get(url)

    if response.status_code != 200:
        raise RuntimeError(f"Error fetching data: {response.status_code}")

    # Step 4: Check if the suffix is in the response
    hashes = (line.split(':') for line in response.text.splitlines())
    for hash_suffix, count in hashes:
        if hash_suffix == suffix:
            return f"Password '{password}' found {count} times in breaches!"

    return f"Password '{password}' not found in any breaches."
def check_passwords_from_file(filename):
    """Read passwords from a file and check each one."""

    # Step 1: Open the file and read passwords
    try:
        with open(filename, 'r') as file:
            passwords = file.readlines()
    except FileNotFoundError:
        print(f"File '{filename}' not found.")
        return

    # Step 2: Loop through each password and check if it has been breached
    for password in passwords:
        password = password.strip()  # Remove any extra spaces or newline characters
        if password:  # Check non-empty password
            result = check_pwned_password(password)
            print(result)

# Example usage
filename = "passwords.txt"
check_passwords_from_file(filename)
